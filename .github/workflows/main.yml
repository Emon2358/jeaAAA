name: Download RAW & Convert S3M/IT → FLAC

on:
  workflow_dispatch:

jobs:
  download_extract_convert:
    runs-on: ubuntu-latest

    steps:
      # 1. リポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      # 2. 必要ツールのインストール（7z, ffmpeg, curl, rsync）
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full ffmpeg curl rsync

      # 3. ModArchive から RAW をダウンロード（リモートのファイル名を維持）
      - name: Download RAW from ModArchive
        run: |
          mkdir -p downloaded
          cd downloaded
          # -J -O オプションで Content-Disposition ヘッダーからファイル名を取得して保存
          curl -L -J -O "https://api.modarchive.org/downloads.php?moduleid=74080"
          cd ..

      # 4. ダウンロードしたファイルを extracted/ に展開またはコピー
      - name: Extract or copy downloaded file
        run: |
          mkdir -p extracted
          for file in downloaded/*; do
            echo "Processing downloaded file: $file"
            case "$file" in
              *.zip|*.lzh|*.rar|*.7z)
                echo "  Extracting archive: $file → extracted/"
                7z x "$file" -oextracted
                ;;
              *.s3m|*.it|*.mod|*.xm|*.snd)
                echo "  Copying module file: $file → extracted/"
                cp "$file" extracted/
                ;;
              *)
                echo "  Trying 7z extract for unknown type: $file"
                7z x "$file" -oextracted || echo "    Skipped (not an archive): $file"
                ;;
            esac
          done

      # 4.5. リポジトリ内に既存の .it ファイルがあれば extracted/ にコピー
      - name: Copy local .it files from repository to extracted/
        run: |
          # .git や downloaded、extracted、converted_flac、flac_output 以下は除外して検索
          find . -type f -iname "*.it" \
            -not -path "./.git/*" \
            -not -path "./downloaded/*" \
            -not -path "./extracted/*" \
            -not -path "./converted_flac/*" \
            -not -path "./flac_output/*" \
            | while read repo_it; do
                echo "Copying local .it file: $repo_it → extracted/"
                cp "$repo_it" extracted/
              done || echo "No local .it files to copy."

      # 5. extracted フォルダ内の .s3m および .it を CD品質 FLAC に変換
      - name: Convert .s3m/.it → .flac (CD品質)
        run: |
          mkdir -p converted_flac
          # *.s3m および *.it の両方を検索して処理
          find extracted -type f \( -iname "*.s3m" -o -iname "*.it" \) | while read infile; do
            # 拡張子を取り除いたベースファイル名を取得
            filename=$(basename "$infile")
            name="${filename%.*}"
            # ファイル名中の問題文字をアンダースコアに置換して安全な名前にする
            safe_name=$(echo "$name" | sed 's/[^a-zA-Z0-9._-]/_/g')
            outfile="converted_flac/${safe_name}.flac"
            echo "Converting: $infile → $outfile"
            ffmpeg -y -i "$infile" -ac 2 -ar 44100 -sample_fmt s16 -c:a flac -compression_level 12 "$outfile"
          done

      # 6. 変換結果をリポジトリにコピー
      - name: Copy converted FLAC to flac_output/
        run: |
          mkdir -p flac_output
          rsync -av converted_flac/ flac_output/

      # 7. Git ユーザー設定
      - name: Setup Git author
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 8. 変換結果をコミットしてプッシュ
      - name: Commit & push converted FLAC
        run: |
          if [ -n "$(git status --porcelain flac_output)" ]; then
            git add flac_output/
            git commit -m "Add FLAC files converted from ModArchive S3M/IT and local .it"
            git push origin HEAD:${{ github.ref_name }}
          else
            echo "No new FLAC files to commit."
          fi
